@use "sass:meta";
@use "sass:map";
@use "variables" as *;

// Transform scss variables to css global variables
@mixin spread-map($map: ()) {
  @each $key, $value in $map {
    #{$key}: #{meta.inspect($value)};
  }
}

/// Access breakpoints, max-width
@mixin breakpoint-down($breakpoint) {
  @if map-has-key($bootstrap-breakpoints, $breakpoint) {
    @media (max-width: #{map-get($bootstrap-breakpoints, $breakpoint)}) {
      @content;
    }
  } @else {
    @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '
    + 'Please make sure it is defined in `$bootstrap-breakpoints` map.';
  }
}

@mixin breakpoint-up($breakpoint) {
  @if map-has-key($bootstrap-breakpoints, $breakpoint) {
    @media (min-width: #{map-get($bootstrap-breakpoints, $breakpoint) + 0.02px}) {
      @content;
    }
  } @else {
    @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '
    + 'Please make sure it is defined in `$bootstrap-breakpoints` map.';
  }
}

@mixin ea_utilities__is_sr_only() {
  position: absolute !important;

  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;

  width: 0.01em !important;
  height: 0.01em !important;
  padding: 0 !important;
  margin: 0 !important;

  white-space: nowrap !important;

  border: none !important;
}

@mixin ea_utilities__overflow-hidden() {
  overflow: hidden !important;
}

@mixin tile($border, $border_radius, $padding) {
  border: 1px solid $border;
  border-radius: $border_radius;
  padding: $padding;
}